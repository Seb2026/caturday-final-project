{"ast":null,"code":"/**Our connection to the back-end */\nimport axios from \"axios\";\n\nconst createHeaders = () => {\n  return {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  };\n}; // const serverURL = process.env.x-api-key\n\n\nconst serverURL = process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_SERVER_URL : `http://localhost:5000/api`; // NODE_ENV === 'production' ? process.env.REACT_APP_SERVER_URL : `http://localhost:5000/api`\n\nconst actions = {\n  getUser: async () => {\n    let profile = await axios.get(`${serverURL}/user`, createHeaders());\n    console.log(profile);\n    return profile.data;\n  },\n  getMyComments: async () => {\n    return await axios.get(`${serverURL}/getMyComments`, createHeaders());\n  },\n  getComments: async () => {\n    return await axios.get(`${serverURL}/getComments`, createHeaders());\n  },\n  addComment: async comment => {\n    return await axios.post(`${serverURL}/addComment`, comment, createHeaders());\n  },\n  logIn: async profile => {\n    let res = await axios.post(`${serverURL}/logMeIn`, profile.profileObj, createHeaders()); //Set JWT token to localStorage\n\n    localStorage.setItem(\"token\", res.data.token);\n    return res.data.user;\n  }\n};\nexport default actions;","map":{"version":3,"sources":["/Users/sebastianmontoya/Desktop/ironhack/projects/final-project/frontend/src/api.js"],"names":["axios","createHeaders","headers","Authorization","localStorage","getItem","serverURL","process","env","NODE_ENV","REACT_APP_SERVER_URL","actions","getUser","profile","get","console","log","data","getMyComments","getComments","addComment","comment","post","logIn","res","profileObj","setItem","token","user"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,SAAO;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADhD;AADJ,GAAP;AAKD,CAND,C,CAQA;;;AACA,MAAMC,SAAS,GACbC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACIF,OAAO,CAACC,GAAR,CAAYE,oBADhB,GAEK,2BAHP,C,CAIA;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,YAAY;AACnB,QAAIC,OAAO,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,GAAER,SAAU,OAAvB,EAA+BL,aAAa,EAA5C,CAApB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,WAAOA,OAAO,CAACI,IAAf;AACD,GALa;AAMdC,EAAAA,aAAa,EAAE,YAAY;AACzB,WAAO,MAAMlB,KAAK,CAACc,GAAN,CAAW,GAAER,SAAU,gBAAvB,EAAwCL,aAAa,EAArD,CAAb;AACD,GARa;AASdkB,EAAAA,WAAW,EAAE,YAAY;AACvB,WAAO,MAAMnB,KAAK,CAACc,GAAN,CAAW,GAAER,SAAU,cAAvB,EAAsCL,aAAa,EAAnD,CAAb;AACD,GAXa;AAYdmB,EAAAA,UAAU,EAAE,MAAOC,OAAP,IAAmB;AAC7B,WAAO,MAAMrB,KAAK,CAACsB,IAAN,CACV,GAAEhB,SAAU,aADF,EAEXe,OAFW,EAGXpB,aAAa,EAHF,CAAb;AAKD,GAlBa;AAmBdsB,EAAAA,KAAK,EAAE,MAAOV,OAAP,IAAmB;AACxB,QAAIW,GAAG,GAAG,MAAMxB,KAAK,CAACsB,IAAN,CACb,GAAEhB,SAAU,UADC,EAEdO,OAAO,CAACY,UAFM,EAGdxB,aAAa,EAHC,CAAhB,CADwB,CAMxB;;AACAG,IAAAA,YAAY,CAACsB,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACP,IAAJ,CAASU,KAAvC;AACA,WAAOH,GAAG,CAACP,IAAJ,CAASW,IAAhB;AACD;AA5Ba,CAAhB;AA+BA,eAAejB,OAAf","sourcesContent":["/**Our connection to the back-end */\nimport axios from \"axios\";\n\nconst createHeaders = () => {\n  return {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n  };\n};\n\n// const serverURL = process.env.x-api-key\nconst serverURL =\n  process.env.NODE_ENV === \"production\"\n    ? process.env.REACT_APP_SERVER_URL\n    : `http://localhost:5000/api`;\n// NODE_ENV === 'production' ? process.env.REACT_APP_SERVER_URL : `http://localhost:5000/api`\n\nconst actions = {\n  getUser: async () => {\n    let profile = await axios.get(`${serverURL}/user`, createHeaders());\n    console.log(profile);\n    return profile.data;\n  },\n  getMyComments: async () => {\n    return await axios.get(`${serverURL}/getMyComments`, createHeaders());\n  },\n  getComments: async () => {\n    return await axios.get(`${serverURL}/getComments`, createHeaders());\n  },\n  addComment: async (comment) => {\n    return await axios.post(\n      `${serverURL}/addComment`,\n      comment,\n      createHeaders()\n    );\n  },\n  logIn: async (profile) => {\n    let res = await axios.post(\n      `${serverURL}/logMeIn`,\n      profile.profileObj,\n      createHeaders()\n    );\n    //Set JWT token to localStorage\n    localStorage.setItem(\"token\", res.data.token);\n    return res.data.user;\n  },\n};\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}