{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmontoya/Desktop/ironhack/projects/final-project/frontend/src/components/Auth.js\";\nimport React, { Component } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport actions from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.responseGoogle = async response => {\n      let user = await actions.logIn(response);\n      this.props.setUser(user);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: process.env.REACT_APP_GOOGLE_KEY,\n      buttonText: \"Login\",\n      onSuccess: this.responseGoogle,\n      onFailure: this.responseGoogle,\n      cookiePolicy: \"single_host_origin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/Users/sebastianmontoya/Desktop/ironhack/projects/final-project/frontend/src/components/Auth.js"],"names":["React","Component","GoogleLogin","actions","Auth","responseGoogle","response","user","logIn","props","setUser","render","process","env","REACT_APP_GOOGLE_KEY"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,OAAP,MAAoB,QAApB;;;AACA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAC3BI,cAD2B,GACV,MAAOC,QAAP,IAAoB;AACnC,UAAIC,IAAI,GAAG,MAAMJ,OAAO,CAACK,KAAR,CAAcF,QAAd,CAAjB;AACA,WAAKG,KAAL,CAAWC,OAAX,CAAmBH,IAAnB;AACD,KAJ0B;AAAA;;AAM3BI,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,oBADxB;AAEE,MAAA,UAAU,EAAC,OAFb;AAGE,MAAA,SAAS,EAAE,KAAKT,cAHlB;AAIE,MAAA,SAAS,EAAE,KAAKA,cAJlB;AAKE,MAAA,YAAY,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAhB0B;;AAmB7B,eAAeD,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport actions from \"../api\";\nclass Auth extends Component {\n  responseGoogle = async (response) => {\n    let user = await actions.logIn(response);\n    this.props.setUser(user);\n  };\n\n  render() {\n    return (\n      <GoogleLogin\n        clientId={process.env.REACT_APP_GOOGLE_KEY}\n        buttonText=\"Login\"\n        onSuccess={this.responseGoogle}\n        onFailure={this.responseGoogle}\n        cookiePolicy={\"single_host_origin\"}\n      />\n    );\n  }\n}\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}